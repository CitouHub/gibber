<Project>
  <UsingTask
    TaskName="CalculateInformalVersion"
    TaskFactory="RoslynCodeTaskFactory"
    AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" >
    <ParameterGroup>
      <VersionPrefix ParameterType="System.String" Required="true" />
      <BuildId ParameterType="System.String" Required="true" />
      <BuildTag ParameterType="System.String" Required="true" />
      <CommitId ParameterType="System.String" Required="true" />
      <CalculatedInformalVersion ParameterType="System.String" Output="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System"/>
      <Code Type="Fragment" Language="cs">
        <![CDATA[  
if (VersionPrefix.Split('.').Length > 3)
  throw new ArgumentException("Version should only be set with Major.Minor.Build, rest is generated");

// Return formatted version number [VersionPrefix] BuildId:[BuildId] [Year]-[Month]-[Day] [Hour]:[Minute] UTC
var now = DateTime.UtcNow;
CalculatedInformalVersion = string.Format("{0} BuildId:{2} Tag:{3} Commit:{4} {1:yyyy-MM-dd HH:mm} UTC", VersionPrefix, now, BuildId, BuildTag, CommitId);
]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="UpdateVersion" AfterTargets="PrepareForBuild">

    <PropertyGroup Condition="'$(CalculatedInformalVersion)' == ''">
      <CalculatedInformalVersion></CalculatedInformalVersion>
    </PropertyGroup>
    <CalculateInformalVersion VersionPrefix="$(Version)" BuildId="$(BuildId)" BuildTag="$(BuildTag)" CommitId="$(CommitId)" Condition="'$(CalculatedInformalVersion)' == ''">
      <Output TaskParameter="CalculatedInformalVersion" PropertyName="CalculatedInformalVersion" />
    </CalculateInformalVersion>
	
	    <Message Importance="High" Text="Inputs: tag: '$(BuildTag)', buildid: '$(BuildId)', commitid: $(CommitId)" />
		<Message Importance="High" Text="Setting informal version to '$(CalculatedInformalVersion)'" />

    <PropertyGroup>
      <InformationalVersion>$(CalculatedInformalVersion)</InformationalVersion>
    </PropertyGroup>
  </Target>
</Project>
